#! /usr/bin/env node
'use strict';

/* This is only for development, DO NOT USE for production */
const babel = require('babel/register');

const path = require('path');
const httpProxy = require('http-proxy');
const http = require('http');
const proxy = httpProxy.createProxyServer({
  changeOrigin: true,
  ws: true
});
const setup = require('../config/server/setup');
const app = require('../main');
const PORT = setup.normalizePort('3000');
// Set the port as an app variable
app.set('port', PORT);


/* IMPORTANT: This code helps us build with react-hot-loader in dev while sustaining an express server */
const bundle = require('../config/server/dev');
bundle();
app.all('/build/*', function (req, res) {
  proxy.web(req, res, {
      target: 'http://127.0.0.1:3001'
  });
});
app.all('/socket.io*', function (req, res) {
  proxy.web(req, res, {
    target: 'http://127.0.0.1:3001'
  });
});


proxy.on('error', function(e) {
  // Just catch it
});

// We need to use basic HTTP service to proxy
// websocket requests from webpack
const server = http.createServer(app);

server.on('upgrade', function (req, socket, head) {
  proxy.ws(req, socket, head);
});

server.listen(PORT, function () {
  console.log('Server running on port %s', PORT);
});

server.on('error', setup.onError);
